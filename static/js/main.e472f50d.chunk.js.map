{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","formSubmit","event","preventDefault","contact","nanoid","setState","inputChange","target","value","findName","showFilteredContacts","obj","toLowerCase","includes","deleteContact","this","className","onSubmit","type","pattern","title","required","onChange","map","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEMA,E,4MACJC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDD,KAAM,GACNC,OAAQ,GACRC,OAAQ,I,EAGVC,WAAa,SAAAC,GACXA,EAAMC,iBACN,MAAmC,EAAKR,MAAhCC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,OAElBK,EAAU,CAAEP,GAAIQ,cAAUP,OAAMC,UACtC,EAAKO,SAAS,CAAEV,SAAS,CAAEQ,GAAH,mBAAeR,O,EAGzCW,YAAc,SAAAL,GACZ,EAAKI,SAAL,eAAiBJ,EAAMM,OAAOV,KAAOI,EAAMM,OAAOC,S,EAGpDC,SAAW,SAAAR,GACT,EAAKI,SAAS,CAAEN,OAAQE,EAAMM,OAAOC,S,EAGvCE,qBAAuB,WACrB,MAA6B,EAAKhB,MAA1BC,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,OAKlB,OAHyBJ,EAASI,QAAO,SAAAY,GAAG,OAC1CA,EAAId,KAAKe,cAAcC,SAASd,EAAOa,mB,EAK3CE,cAAgB,SAAAlB,GACd,IAAQD,EAAa,EAAKD,MAAlBC,SAER,EAAKU,SAAS,CAAEV,SAAUA,EAASI,QAAO,SAAAY,GAAG,OAAIA,EAAIf,KAAOA,Q,4CAG9D,WAAU,IAAD,OACP,EAAiCmB,KAAKrB,MAA9BG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OACtB,OACE,sBAAKiB,UAAU,MAAf,UACE,uBAAMC,SAAUF,KAAKf,WAArB,UACE,yCAEE,uBACEkB,KAAK,OACLrB,KAAK,OACLW,MAAOX,EACPsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUP,KAAKT,iBAGnB,2CAEE,uBACEY,KAAK,MACLrB,KAAK,SACLW,MAAOV,EACPqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUP,KAAKT,iBAGnB,wBAAQY,KAAK,SAAb,4BAEF,0DAEE,uBAAOA,KAAK,OAAOV,MAAOT,EAAQuB,SAAUP,KAAKN,cAEnD,6BACGM,KAAKL,uBAAuBa,KAAI,gBAAG3B,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAC/B,+BACGD,EADH,KACWC,EACT,wBAAQoB,KAAK,SAASM,QAAS,kBAAM,EAAKV,cAAclB,IAAxD,sBAFOA,e,GAjFH6B,aA8FHhC,IC3FfiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e472f50d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  formSubmit = event => {\n    event.preventDefault();\n    const { contacts, name, number } = this.state;\n\n    const contact = { id: nanoid(), name, number };\n    this.setState({ contacts: [contact, ...contacts] });\n  };\n\n  inputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  findName = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  showFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = contacts.filter(obj =>\n      obj.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n    return filteredContacts;\n  };\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    this.setState({ contacts: contacts.filter(obj => obj.id !== id) });\n  };\n\n  render() {\n    const { name, number, filter } = this.state;\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.formSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={this.inputChange}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={this.inputChange}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <label>\n          Find contacts by name\n          <input type=\"text\" value={filter} onChange={this.findName} />\n        </label>\n        <ul>\n          {this.showFilteredContacts().map(({ id, name, number }) => (\n            <li key={id}>\n              {name}: {number}\n              <button type=\"button\" onClick={() => this.deleteContact(id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}